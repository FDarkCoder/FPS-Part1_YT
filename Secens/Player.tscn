[gd_scene load_steps=4 format=3 uid="uid://dsj77wodlnis5"]

[sub_resource type="GDScript" id="GDScript_ut75o"]
script/source = "extends CharacterBody3D


@onready var Cam = $Camera3D


const SPEED = 5.0
const JUMP_VELOCITY = 4.5

# Get the gravity from the project settings to be synced with RigidBody nodes.
var gravity = 10.0

func _ready():
	Input.mouse_mode = Input.MOUSE_MODE_CAPTURED
	Cam.current = true

func _unhandled_input(event):
	if event is InputEventMouseMotion:
		rotate_y(-event.relative.x * .005)
		Cam.rotate_x(-event.relative.y * .005)
		Cam.rotation.x = clamp(Cam.rotation.x, -PI/3, PI/3)
		

func _physics_process(delta):
	# Add the gravity.
	if not is_on_floor():
		velocity.y -= gravity * delta

	# quit Input
	
	if Input.is_action_pressed(\"quit\"):
		get_tree().quit()
	
	# Handle Jump.
	if Input.is_action_just_pressed(\"jump\") and is_on_floor():
		velocity.y = JUMP_VELOCITY

	# Get the input direction and handle the movement/deceleration.
	# As good practice, you should replace UI actions with custom gameplay actions.
	var input_dir = Input.get_vector(\"left\", \"right\", \"forward\", \"back\")
	var direction = (transform.basis * Vector3(input_dir.x, 0, input_dir.y)).normalized()
	if direction:
		velocity.x = direction.x * SPEED
		velocity.z = direction.z * SPEED
	else:
		velocity.x = move_toward(velocity.x, 0, SPEED)
		velocity.z = move_toward(velocity.z, 0, SPEED)

	move_and_slide()
"

[sub_resource type="CapsuleShape3D" id="CapsuleShape3D_6ic55"]

[sub_resource type="CapsuleMesh" id="CapsuleMesh_cocd2"]

[node name="Player" type="CharacterBody3D"]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0.998827, 0)
script = SubResource("GDScript_ut75o")

[node name="CollisionShape3D" type="CollisionShape3D" parent="."]
shape = SubResource("CapsuleShape3D_6ic55")

[node name="CSGMesh3D" type="CSGMesh3D" parent="."]
mesh = SubResource("CapsuleMesh_cocd2")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1.375, 3.824)
